# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Restore dependencies
      run: dotnet restore InjectableDotNetHost.sln
    - name: Compile Bootstrap x86
      run: msbuild -t:rebuild -verbosity:diag -property:Configuration=Debug -property:Platform=Win32 -property:SolutionDir=..\..\ src\InjectableDotNetHost.Bootstrap\InjectableDotNetHost.Bootstrap_x86.vcxproj
    - name: Compile Bootstrap x64
      run: msbuild -t:rebuild -verbosity:diag -property:Configuration=Debug -property:Platform=x64 -property:SolutionDir=..\..\ src\InjectableDotNetHost.Bootstrap\InjectableDotNetHost.Bootstrap_x64.vcxproj
    - name: "Check file existence"
      uses: andstor/file-existence-action@v2
      with:
        files: "LICENSE"
    - name: "Check file existence"
      uses: andstor/file-existence-action@v2
      with:
        files: "NO_SUCH_FILE"
    - name: Build app for release
      run: msbuild InjectableDotNetHost.sln -t:build -verbosity:diag -property:Configuration=Debug -property:Platform=Mixed

    - name: Pack app
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: dotnet pack src\InjectableDotNetHost.Injector\InjectableDotNetHost.Injector.csproj -p:SolutionDir=..\..\ -c Debug --version-suffix "main$GITHUB_RUN_ID"
